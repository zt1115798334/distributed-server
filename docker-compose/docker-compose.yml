version: '3'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.10-rc.5-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - ./rabbitmq/env/rabbitmq.env
  seata-server:
    image: seataio/seata-server
    container_name: seata-server
    ports:
      - '8091:8091'
  mysql-nacos:
    container_name: mysql-nacos
    image: nacos/nacos-mysql:8.0.16
    env_file:
      - ./mysql-nacos/env/mysql-nacos.env
    volumes:
      - ./mysql-nacos/db:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - nacos
  nacos:
    image: nacos/nacos-server
    container_name: nacos
    env_file:
      - ./nacos/env/nacos.env
    volumes:
      - ./nacos/logs/:/home/nacos/logs
#      - ./init.d/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8848:8848"
      - "9555:9555"
    networks:
      - nacos
    depends_on:
      - mysql-nacos
  mysql-zipkin:
    image: registry.cn-hangzhou.aliyuncs.com/zt_images/mysql-zipkin:latest
    container_name: mysql-zipkin
    ports:
      - '3307:3306'
    env_file:
     - ./mysql-zipkin/env/mysql-zipkin.env
    volumes:
      - ./mysql-zipkin/db:/var/lib/mysql
    networks:
      - zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    env_file:
      - ./zipkin/env/zipkin.env
    networks:
      - zipkin
    ports:
      - '9411:9411'
    depends_on:
      - mysql-zipkin
  dic:
    container_name: dic
    image: nginx
    ports:
      - '8989:8989'
    volumes:
      - ./dic/config/zdy.conf:/etc/nginx/conf.d/zdy.conf
      - ./dic/dic:/usr/share/nginx/dic
    networks:
      - elastic
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    networks:
      - elastic
    depends_on:
      - es01
      - es02
  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - es01
      - es02
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=elastic
      - KEYSTORE_PASSWORD=elastic
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins:ro
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12:ro
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=elastic
      - KEYSTORE_PASSWORD=elastic
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins:ro
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12:ro
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic

volumes:
  data01:
    driver: local
  data02:
    driver: local

networks:
  elastic:
    driver: bridge
  zipkin:
    driver: bridge
  nacos:
    driver: bridge